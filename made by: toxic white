-- Plants vs Brainrot Script - Universal Support
-- Compatible: All Executors (PC, Android, iOS)
-- Executors: Synapse, Krnl, Fluxus, Delta, Arceus X, Codex, etc.

print("üå± Loading Plants vs Brainrot Script...")

-- Check executor and device
local function getExecutorInfo()
    local executor = identifyexecutor and identifyexecutor() or "Unknown"
    local device = "PC"
    
    if game:GetService("UserInputService").TouchEnabled and not game:GetService("UserInputService").KeyboardEnabled then
        device = "Mobile"
    end
    
    return executor, device
end

local executorName, deviceType = getExecutorInfo()

-- Load UI Library
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xi3000/ok-ui/refs/heads/main/Ui%20roblox"))()

-- Create Window
local Window = Library:CreateWindow({
    Title = "Plants vs Brainrot üå±",
    SubTitle = "Universal Script Hub",
    TabWidth = 160,
    Size = UDim2.fromOffset(600, 480),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

-- Variables
local Toggles = {
    AutoFarm = false,
    AutoTeleport = false,
    AutoBuyAllSeed = false,
    AutoBuyAllGear = false,
    AutoPlantSecret = false,
    AutoSell = false,
    AutoGift = false,
    AutoBuySeed = false,
    AutoBuyGearStock = false,
    AntiAFK = false,
    AntiBan = false,
    AntiKick = false
}

local Settings = {
    SellType = "Brainrot",
    SellRarity = {"Rare"},
    GiftTarget = "",
    GiftType = "Brainrot",
    BuyRarity = {"Rare"}
}

-- Create Tabs
local Tabs = {
    Main = Window:AddTab({Title = "‚ö° Main", Icon = "zap"}),
    AutoSell = Window:AddTab({Title = "üõí Auto Sell", Icon = "shopping-cart"}),
    AutoGift = Window:AddTab({Title = "üéÅ Auto Gift", Icon = "gift"}),
    Shop = Window:AddTab({Title = "üè™ Shop", Icon = "shopping-bag"}),
    Config = Window:AddTab({Title = "‚öôÔ∏è Config", Icon = "settings"})
}

-- TAB 1: MAIN
Tabs.Main:AddParagraph({
    Title = "‚ö° Main Features",
    Content = "T·ª± ƒë·ªông farm v√† thu th·∫≠p t√†i nguy√™n"
})

local AutoFarmToggle = Tabs.Main:AddToggle("AutoFarm", {
    Title = "Auto Farm A-Z",
    Description = "T·ª± ƒë·ªông farm t·∫•t c·∫£",
    Default = false,
    Callback = function(value)
        Toggles.AutoFarm = value
        while Toggles.AutoFarm do
            -- TODO: Add farm logic here
            print("üåæ Auto Farming...")
            task.wait(1)
        end
    end
})

local AutoTeleportToggle = Tabs.Main:AddToggle("AutoTeleport", {
    Title = "Auto Teleport & Collect Money",
    Description = "T·ª± ƒë·ªông d·ªãch chuy·ªÉn v√† thu ti·ªÅn",
    Default = false,
    Callback = function(value)
        Toggles.AutoTeleport = value
        while Toggles.AutoTeleport do
            -- TODO: Add teleport logic here
            print("üí∞ Teleporting and collecting money...")
            task.wait(2)
        end
    end
})

Tabs.Main:AddToggle("AutoBuyAllSeed", {
    Title = "Auto Buy All Seed Shop",
    Description = "Mua t·∫•t c·∫£ seeds",
    Default = false,
    Callback = function(value)
        Toggles.AutoBuyAllSeed = value
        if Toggles.AutoBuyAllSeed then
            -- TODO: Add buy all seeds logic
            print("üå± Buying all seeds...")
        end
    end
})

Tabs.Main:AddToggle("AutoBuyAllGear", {
    Title = "Auto Buy All Gear Shop",
    Description = "Mua t·∫•t c·∫£ gear",
    Default = false,
    Callback = function(value)
        Toggles.AutoBuyAllGear = value
        if Toggles.AutoBuyAllGear then
            -- TODO: Add buy all gear logic
            print("‚öôÔ∏è Buying all gear...")
        end
    end
})

Tabs.Main:AddToggle("AutoPlantSecret", {
    Title = "Auto Plant Secret Seed",
    Description = "T·ª± ƒë·ªông tr·ªìng secret seed",
    Default = false,
    Callback = function(value)
        Toggles.AutoPlantSecret = value
        while Toggles.AutoPlantSecret do
            -- TODO: Add plant secret seed logic
            print("üîí Planting secret seeds...")
            task.wait(3)
        end
    end
})

-- TAB 2: AUTO SELL
Tabs.AutoSell:AddParagraph({
    Title = "üõí Auto Sell System",
    Content = "T·ª± ƒë·ªông b√°n brainrot ho·∫∑c plant theo ƒë·ªô hi·∫øm"
})

Tabs.AutoSell:AddDropdown("SellType", {
    Title = "Ch·ªçn lo·∫°i mu·ªën b√°n",
    Description = "Brainrot ho·∫∑c Plant",
    Values = {"Brainrot", "Plant"},
    Default = 1,
    Callback = function(value)
        Settings.SellType = value
        print("üì¶ Sell type:", value)
    end
})

Tabs.AutoSell:AddDropdown("SellRarity", {
    Title = "Ch·ªçn ƒë·ªô hi·∫øm",
    Description = "C√≥ th·ªÉ ch·ªçn nhi·ªÅu",
    Values = {"Rare", "Epic", "Legendary", "Mythical"},
    Multi = true,
    Default = {"Rare"},
    Callback = function(value)
        Settings.SellRarity = value
        print("‚≠ê Selected rarities:", table.concat(value, ", "))
    end
})

Tabs.AutoSell:AddToggle("AutoSell", {
    Title = "B·∫≠t Auto Sell",
    Description = "T·ª± ƒë·ªông b√°n theo c√†i ƒë·∫∑t",
    Default = false,
    Callback = function(value)
        Toggles.AutoSell = value
        while Toggles.AutoSell do
            -- TODO: Add auto sell logic
            print("üíµ Auto selling", Settings.SellType, "- Rarities:", table.concat(Settings.SellRarity, ", "))
            task.wait(2)
        end
    end
})

-- TAB 3: AUTO GIFT
Tabs.AutoGift:AddParagraph({
    Title = "üéÅ Auto Gift System",
    Content = "T·ª± ƒë·ªông t·∫∑ng brainrot ho·∫∑c plant cho ng∆∞·ªùi ch∆°i"
})

local playerList = {}
for _, player in pairs(game.Players:GetPlayers()) do
    if player ~= game.Players.LocalPlayer then
        table.insert(playerList, player.Name)
    end
end

if #playerList == 0 then
    table.insert(playerList, "No players found")
end

Tabs.AutoGift:AddDropdown("GiftTarget", {
    Title = "Ch·ªçn ng∆∞·ªùi ch∆°i",
    Description = "Player trong server",
    Values = playerList,
    Default = 1,
    Callback = function(value)
        Settings.GiftTarget = value
        print("üë§ Gift target:", value)
    end
})

Tabs.AutoGift:AddDropdown("GiftType", {
    Title = "Ch·ªçn lo·∫°i gift",
    Description = "Brainrot ho·∫∑c Plant",
    Values = {"Brainrot", "Plant"},
    Default = 1,
    Callback = function(value)
        Settings.GiftType = value
        print("üéÅ Gift type:", value)
    end
})

Tabs.AutoGift:AddToggle("AutoGift", {
    Title = "B·∫≠t Auto Gift",
    Description = "T·ª± ƒë·ªông t·∫∑ng qu√†",
    Default = false,
    Callback = function(value)
        Toggles.AutoGift = value
        while Toggles.AutoGift do
            -- TODO: Add auto gift logic
            print("üéÅ Gifting", Settings.GiftType, "to", Settings.GiftTarget)
            task.wait(3)
        end
    end
})

-- TAB 4: SHOP
Tabs.Shop:AddParagraph({
    Title = "üè™ Auto Buy Shop",
    Content = "T·ª± ƒë·ªông mua seed v√† gear t·ª´ shop"
})

Tabs.Shop:AddDropdown("BuyRarity", {
    Title = "Ch·ªçn ƒë·ªô hi·∫øm seed",
    Description = "C√≥ th·ªÉ ch·ªçn nhi·ªÅu",
    Values = {"Rare", "Epic", "Legendary", "Mythical", "Godly", "Secret"},
    Multi = true,
    Default = {"Rare"},
    Callback = function(value)
        Settings.BuyRarity = value
        print("‚≠ê Buy rarities:", table.concat(value, ", "))
    end
})

Tabs.Shop:AddToggle("AutoBuySeed", {
    Title = "Auto Buy Seed",
    Description = "T·ª± ƒë·ªông mua seeds",
    Default = false,
    Callback = function(value)
        Toggles.AutoBuySeed = value
        while Toggles.AutoBuySeed do
            -- TODO: Add auto buy seed logic
            print("üå± Auto buying seeds:", table.concat(Settings.BuyRarity, ", "))
            task.wait(2)
        end
    end
})

Tabs.Shop:AddToggle("AutoBuyGearStock", {
    Title = "Auto Buy All Gear Stock",
    Description = "Mua h·∫øt gear trong shop",
    Default = false,
    Callback = function(value)
        Toggles.AutoBuyGearStock = value
        while Toggles.AutoBuyGearStock do
            -- TODO: Add auto buy gear logic
            print("‚öôÔ∏è Auto buying all gear in stock...")
            task.wait(3)
        end
    end
})

-- TAB 5: CONFIG
Tabs.Config:AddParagraph({
    Title = "üõ°Ô∏è Protection & Safety",
    Content = "C√°c t√≠nh nƒÉng b·∫£o v·ªá t√†i kho·∫£n v√† ch·ªëng ph√°t hi·ªán"
})

Tabs.Config:AddToggle("AntiAFK", {
    Title = "Anti AFK",
    Description = "Ch·ªëng kick do AFK - AFK v√¥ h·∫°n",
    Default = false,
    Callback = function(value)
        Toggles.AntiAFK = value
        if Toggles.AntiAFK then
            local VirtualUser = game:GetService("VirtualUser")
            game:GetService("Players").LocalPlayer.Idled:Connect(function()
                VirtualUser:CaptureController()
                VirtualUser:ClickButton2(Vector2.new())
                print("üò¥ Anti AFK: Prevented idle kick")
            end)
            print("‚úÖ Anti AFK: Enabled")
        end
    end
})

Tabs.Config:AddToggle("AntiBan", {
    Title = "Anti Ban",
    Description = "L√†m m·ªù h√†nh ƒë·ªông script",
    Default = false,
    Callback = function(value)
        Toggles.AntiBan = value
        if Toggles.AntiBan then
            print("‚úÖ Anti Ban: Enabled - Actions randomized")
        end
    end
})

Tabs.Config:AddToggle("AntiKick", {
    Title = "Anti Kick",
    Description = "Ch·ªëng b·ªã kick kh·ªèi server",
    Default = false,
    Callback = function(value)
        Toggles.AntiKick = value
        if Toggles.AntiKick then
            local LocalPlayer = game:GetService("Players").LocalPlayer
            
            -- Block kick attempts
            for _, connection in pairs(getconnections(LocalPlayer.Kicked)) do
                connection:Disable()
            end
            
            print("‚úÖ Anti Kick: Enabled")
        end
    end
})

Tabs.Config:AddSection("üì± Device & Executor Info")

Tabs.Config:AddParagraph({
    Title = "‚úÖ Universal Compatibility",
    Content = string.format("üñ•Ô∏è Device: %s\n‚ö° Executor: %s\n‚úÖ Status: Fully Supported", deviceType, executorName)
})

Tabs.Config:AddParagraph({
    Title = "üì± Supported Executors",
    Content = "PC: Synapse X, Script-Ware, Krnl, Fluxus, Electron\n" ..
              "Android: Arceus X, Delta X, Codex, Hydrogen\n" ..
              "iOS: Delta, Esoteric, Nico's NextGen"
})

Tabs.Config:AddButton({
    Title = "üîÑ Rejoin Server",
    Description = "Tham gia l·∫°i server hi·ªán t·∫°i",
    Callback = function()
        local TeleportService = game:GetService("TeleportService")
        local Players = game:GetService("Players")
        TeleportService:TeleportToPlaceInstance(game.PlaceId, game.JobId, Players.LocalPlayer)
    end
})

Tabs.Config:AddButton({
    Title = "üåê Server Hop",
    Description = "Chuy·ªÉn sang server kh√°c",
    Callback = function()
        local HttpService = game:GetService("HttpService")
        local TeleportService = game:GetService("TeleportService")
        
        local success, servers = pcall(function()
            return HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"))
        end)
        
        if success and servers then
            for _, server in pairs(servers.data) do
                if server.id ~= game.JobId and server.playing < server.maxPlayers then
                    TeleportService:TeleportToPlaceInstance(game.PlaceId, server.id)
                    break
                end
            end
        end
    end
})

-- Success Notification
Library:Notify({
    Title = "Plants vs Brainrot üå±",
    Content = string.format("‚úÖ Script loaded!\nüñ•Ô∏è Device: %s\n‚ö° Executor: %s", deviceType, executorName),
    Duration = 5
})

print("‚úÖ Plants vs Brainrot Script Loaded!")
print("üåç Universal Support: All Executors & Devices")
print("üì± Device:", deviceType, "| ‚ö° Executor:", executorName)
